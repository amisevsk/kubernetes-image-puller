kind: Template
apiVersion: v1
metadata:
  labels:
    app: kubernetes-image-puller
  name: kubernetes-image-puller
objects:
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    labels:
      app: kubernetes-image-puller
    name: ${SERVICEACCOUNT_NAME}
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: kubernetes-image-puller
    name: kubernetes-image-puller
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      app: kubernetes-image-puller
    strategy:
      type: "Recreate"
    template:
      metadata:
        labels:
          app: kubernetes-image-puller
      spec: 
        containers: 
        - name: kubernetes-image-puller
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Never
          livenessProbe:
            exec:
              command:
                - pidof
                - kubernetes-image-puller
            initialDelaySeconds: 5
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
                - pidof
                - kubernetes-image-puller
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            requests:
              memory: 5Mi
            limits:
              memory: 50Mi
          envFrom:
          - configMapRef:
              name: kubernetes-image-puller
          env: 
          - name: SERVICE_ACCOUNT_ID
            valueFrom:
              secretKeyRef:
                name: ${SERVICE_ACCT_CREDENTIALS_SECRET}
                key: service.account.id
          - name: SERVICE_ACCOUNT_SECRET
            valueFrom:
              secretKeyRef:
                name: ${SERVICE_ACCT_CREDENTIALS_SECRET}
                key: service.account.secret
        serviceAccountName: ${SERVICEACCOUNT_NAME}
parameters:
- name: SERVICEACCOUNT_NAME
  value: kubernetes-image-puller
- name: SERVICE_ACCT_CREDENTIALS_SECRET
  value: kubernetes-image-puller
- name: IMAGE
  value: image-caching-test
- name: IMAGE_TAG
  value: dev
